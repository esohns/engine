#version 130

uniform vec2 iResolution;
uniform float iTime;
uniform vec4 iMouse;
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;

void
main ()
{
  vec3 e = vec3(vec2(1.) / iResolution.xy, 0.);
  vec2 q = gl_FragCoord.xy / iResolution.xy;

  vec4 c = texture(iChannel0, q);

  float p11 = c.x;

  float p10 = texture(iChannel1, q - e.zy).x;
  float p01 = texture(iChannel1, q - e.xz).x;
  float p21 = texture(iChannel1, q + e.xz).x;
  float p12 = texture(iChannel1, q + e.zy).x;

  float d = 0.;

  if (iMouse.z > 0.)
    d = smoothstep(4.5, .5, length(iMouse.xy - gl_FragCoord.xy));
  else
  {
    float t = iTime * 2.;
    vec2 pos = fract(floor(t) * vec2(0.456665, 0.708618)) * iResolution.xy;
    float amp = 1. - step(.05, fract(t));
    d = -amp * smoothstep(2.5, .5, length(pos - gl_FragCoord.xy));
  }

  d += -(p11 - .5) * 2. + (p10 + p01 + p21 + p12 - 2.);
  d *= .99;
  d *= step(.1, iTime);
  d = d * .5 + .5;

  gl_FragColor = vec4(d, 0, 0, 0);
}
