#version 130

uniform vec2 iResolution;
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;

void
main ()
{
  vec2 q = gl_FragCoord.xy / iResolution.xy;

  vec3 e = vec3(vec2(1.) / iResolution.xy, 0.);
  float f = 10.0;
  float p10 = texture(iChannel0, q - e.zy).z;
  float p01 = texture(iChannel0, q - e.xz).z;
  float p21 = texture(iChannel0, q + e.xz).z;
  float p12 = texture(iChannel0, q + e.zy).z;

  vec4 w = texture(iChannel0, q);

  vec3 grad = normalize(vec3(p21 - p01, p12 - p10, 0.5));
  vec2 uv = gl_FragCoord.xy * 2. / vec2(textureSize(iChannel1, 0)) + grad.xy * .35;
  uv = uv * 0.5;
  vec4 c = texture(iChannel1, uv);
  c += c * 0.5;
  c += c * w * (0.5 - distance(q, vec2(0.5)));
  vec3 lightDir = vec3(0.2, -0.5, 0.7);
  vec3 light = normalize(lightDir);

  float diffuse = dot(grad, light);
  float spec = pow(max(0., -reflect(light, grad).z), 32.);
  gl_FragColor = mix(c, vec4(.7, .8, 1., 1.), .25) * max(diffuse, 0.) + spec;
}
