#version 130

uniform vec2 iResolution;
uniform float iTime;
uniform sampler2D iChannel0;

float
hash12 (vec2 u)
{
  vec3 p = fract(u.xyx * .1031);
  p += dot(p, p.yzx + 33.33);

  return fract((p.x + p.y) * p.z);
}

#define T(p) texture(iChannel0, mix(u, m, (v+j)/l*p)).rgb
#define H(a) (cos(radians(vec3(0, 60, 120))+(a)*6.2832)*.5+.5)

void
main ()
{
  vec4 C;
  vec2 U = gl_FragCoord.xy;

  vec2 R = iResolution,
       m = vec2(.5),
       u = U/R;

  vec3 c = texture(iChannel0, u).rgb * .7;

  float l = 25.,
        s = 1.,
        j = hash12(U + iTime),
        i = 0., v = i, d;

  for (i; i<l; i++)
      d = 1.-i/l,
      c += ( T(1.) + T(-1.) ) * H(d) * .2,
      v += s;

  c.r += .3-length((U+U-R)/R.y*3.)*.1;

  C = vec4(tanh(c*c), 1);

  gl_FragColor = C;
}
