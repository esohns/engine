#version 130

uniform vec2 iResolution;
uniform sampler2D iChannel0;

#define TEXTURED 1

void
main ()
{
  vec2 q = gl_FragCoord.xy / iResolution.xy;

#if TEXTURED == 1
  vec3 e = vec3(vec2(1.) / iResolution.xy, 0.);
  float p10 = texture(iChannel0, q - e.zy).x;
  float p01 = texture(iChannel0, q - e.xz).x;
  float p21 = texture(iChannel0, q + e.xz).x;
  float p12 = texture(iChannel0, q + e.zy).x;

  vec3 grad = normalize(vec3(p21 - p01, p12 - p10, 1.));
  vec4 c = vec4(0, 0, 0.1, 1.0);
  vec3 light = normalize(vec3(.2, -.5, .7));
  float diffuse = dot(grad, light);
  float spec = pow(max(0., -reflect(light, grad).z), 32.);
  gl_FragColor = mix(c, vec4(.7, .8, 1., 1.), .25) * max(diffuse, 0.) + spec;
#else
  float h = texture(iChannel0, q).x;
  float sh = 1.35 - h*2.;
  vec3 c =
      vec3(exp(pow(sh-.75,2.)*-10.),
          exp(pow(sh-.50,2.)*-20.),
          exp(pow(sh-.25,2.)*-10.));
  gl_FragColor = vec4(c,1.);
#endif
}
