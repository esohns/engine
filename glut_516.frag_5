uniform vec2 iResolution;
//uniform sampler2D iChannel0;
uniform sampler2D iChannel1;
uniform sampler2D iChannel2;

vec2 R;
//vec4 T (vec2 U) { return texture(iChannel0,U/R); }
vec4 P (vec2 U) { return texture(iChannel1,U/R); }

void
main ()
{
  R = iResolution.xy;
  vec2 U = gl_FragCoord.xy;
  vec4 C = P(U);
  vec2 n = P(U+vec2(0,1)).xy,
       e = P(U+vec2(1,0)).xy,
       s = P(U-vec2(0,1)).xy,
       w = P(U-vec2(1,0)).xy;
  float d = (length(n-C.xy)-1.+
             length(e-C.xy)-1.+
             length(s-C.xy)-1.+
             length(w-C.xy)-1.);
  float m1 = 2.*texture(iChannel2,vec2(abs(0.3*C.w),0.)).x,
        m2 = 1.5*texture(iChannel2,vec2(abs(0.3*C.z),0.)).x;
  float p = smoothstep(2.5,2.,length(C.xy-U));
  C = 0.5-0.5*sin(.2*(1.+m1)*C.z*vec4(1)+.4*(3.+m2)*C.w*vec4(1,3,5,4));

  C *= 1.-clamp(.1*d,0.,1.);

  gl_FragColor = C;
}
